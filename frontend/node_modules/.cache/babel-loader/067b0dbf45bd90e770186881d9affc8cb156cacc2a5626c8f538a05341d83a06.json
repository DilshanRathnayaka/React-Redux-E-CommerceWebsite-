{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"CartItems\"),\n  cartTotalQuantity: 0,\n  CartTotalAmount: 0\n};\nconst CartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addTocart(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n      if (itemIndex >= 0) {\n        state.cartItems[itemIndex].cartQuantity += 1;\n        toast.info(\"Incrsed\", {\n          position: \"top-center\"\n        });\n      } else {\n        const tempProduct = {\n          ...action.payload,\n          cartQuantity: 1\n        };\n        state.cartItems.push(tempProduct);\n        toast.success(`${action.payload.name} Added To Cart`, {\n          position: \"top-center\"\n        });\n      }\n      localStorage.setItem(\"CartItems\", JSON.stringify(state.cartItems));\n    }\n  }\n});\nexport const {\n  addTocart\n} = CartSlice.actions;\nexport default CartSlice.reducer;","map":{"version":3,"names":["createSlice","toast","initialState","cartItems","localStorage","getItem","cartTotalQuantity","CartTotalAmount","CartSlice","name","reducers","addTocart","state","action","itemIndex","findIndex","item","id","payload","cartQuantity","info","position","tempProduct","push","success","setItem","JSON","stringify","actions","reducer"],"sources":["C:/Users/nimes/OneDrive/Desktop/Project/E-commerce/frontend/src/features/CartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nimport {toast} from \"react-toastify\"\r\n\r\nconst initialState = {\r\n    cartItems: localStorage.getItem(\"CartItems\",),\r\n    cartTotalQuantity: 0,\r\n    CartTotalAmount: 0\r\n};\r\n\r\nconst CartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState,\r\n    reducers: {\r\n        addTocart(state, action) {\r\n\r\n            const itemIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            if (itemIndex >= 0) {\r\n                state.cartItems[itemIndex].cartQuantity += 1;\r\n                toast.info(\"Incrsed\",{\r\n                    position:\"top-center\"\r\n                });\r\n            } else {\r\n                const tempProduct = { ...action.payload, cartQuantity: 1 };\r\n                state.cartItems.push(tempProduct);\r\n                toast.success(`${action.payload.name} Added To Cart`,{\r\n                    position:\"top-center\",\r\n                });\r\n            }\r\n\r\n            localStorage.setItem(\"CartItems\",JSON.stringify(state.cartItems))\r\n\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addTocart } = CartSlice.actions;\r\nexport default CartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,KAAK,QAAO,gBAAgB;AAEpC,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAE;EAC7CC,iBAAiB,EAAE,CAAC;EACpBC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC1BS,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAK,EAAEC,MAAM,EAAE;MAErB,MAAMC,SAAS,GAAGF,KAAK,CAACT,SAAS,CAACY,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAClF,IAAIH,SAAS,IAAI,CAAC,EAAE;QAChBF,KAAK,CAACT,SAAS,CAACW,SAAS,CAAC,CAACK,YAAY,IAAI,CAAC;QAC5ClB,KAAK,CAACmB,IAAI,CAAC,SAAS,EAAC;UACjBC,QAAQ,EAAC;QACb,CAAC,CAAC;MACN,CAAC,MAAM;QACH,MAAMC,WAAW,GAAG;UAAE,GAAGT,MAAM,CAACK,OAAO;UAAEC,YAAY,EAAE;QAAE,CAAC;QAC1DP,KAAK,CAACT,SAAS,CAACoB,IAAI,CAACD,WAAW,CAAC;QACjCrB,KAAK,CAACuB,OAAO,CAAE,GAAEX,MAAM,CAACK,OAAO,CAACT,IAAK,gBAAe,EAAC;UACjDY,QAAQ,EAAC;QACb,CAAC,CAAC;MACN;MAEAjB,YAAY,CAACqB,OAAO,CAAC,WAAW,EAACC,IAAI,CAACC,SAAS,CAACf,KAAK,CAACT,SAAS,CAAC,CAAC;IAErE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ;AAAU,CAAC,GAAGH,SAAS,CAACoB,OAAO;AAC9C,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}