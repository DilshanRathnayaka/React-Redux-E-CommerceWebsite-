{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"CartItems\") ? JSON.parse(localStorage.getItem(\"CartItems\")) : [],\n  cartTotalQuantity: 0,\n  CartTotalAmount: 0\n};\nconst CartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addTocart(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item._id === action.payload._id);\n      if (itemIndex >= 0) {\n        state.cartItems[itemIndex].cartQuantity += 1;\n        toast.info(\"Incrsed\", {\n          position: \"bottom-left\"\n        });\n      } else {\n        const tempProduct = {\n          ...action.payload,\n          cartQuantity: 1\n        };\n        state.cartItems.push(tempProduct);\n        toast.success(`${action.payload.name} Added To Cart`, {\n          position: \"bottom-left\"\n        });\n      }\n      localStorage.setItem(\"CartItems\", JSON.stringify(state.cartItems));\n    },\n    removeFromCart(state, action) {\n      const nextCartItems = state.cartItems.filter(cartItem => cartItem._id !== action.payload._id);\n      state.cartItems = nextCartItems;\n      localStorage.setItem(\"CartItems\", JSON.stringify(state.cartItems));\n      toast.error(`${action.payload.name} Remove From Cart`, {\n        position: \"bottom-left\"\n      });\n    },\n    DecreseCart(state, action) {\n      const itemIndex = state.cartItems.findIndex(cartItem => cartItem._id === action.payload._id);\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(cartItem => cartItem._id !== action.payload._id);\n        state.cartItems = nextCartItems;\n      }\n      localStorage.setItem(\"CartItems\", JSON.stringify(state.cartItems));\n    },\n    Increse(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item._id === action.payload._id);\n      if (itemIndex >= 0) {\n        state.cartItems[itemIndex].cartQuantity += 1;\n      } else {\n        const tempProduct = {\n          ...action.payload,\n          cartQuantity: 1\n        };\n        state.cartItems.push(tempProduct);\n      }\n      localStorage.setItem(\"CartItems\", JSON.stringify(state.cartItems));\n    },\n    ClearCart(state, action) {\n      state.cartItems = [];\n      toast.error('Cart Cleared', {\n        position: \"bottom-left\"\n      });\n      localStorage.setItem(\"CartItems\", JSON.stringify(state.cartItems));\n    },\n    GetTotal(state, action) {\n      state.cartItems.reduce((cartTotal, cartItem) => {\n        const {\n          price,\n          cartQuantity\n        } = cartItem;\n        const itemTotal = price * cartQuantity;\n        cartTotal.total += itemTotal;\n      }, {\n        total: 0,\n        quantity: 0\n      });\n    }\n  }\n});\nexport const {\n  addTocart,\n  removeFromCart,\n  DecreseCart,\n  Increse,\n  ClearCart\n} = CartSlice.actions;\nexport default CartSlice.reducer;","map":{"version":3,"names":["createSlice","toast","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","CartTotalAmount","CartSlice","name","reducers","addTocart","state","action","itemIndex","findIndex","item","_id","payload","cartQuantity","info","position","tempProduct","push","success","setItem","stringify","removeFromCart","nextCartItems","filter","cartItem","error","DecreseCart","Increse","ClearCart","GetTotal","reduce","cartTotal","price","itemTotal","total","quantity","actions","reducer"],"sources":["C:/Users/nimes/OneDrive/Desktop/Project/E-commerce/frontend/src/features/CartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nconst initialState = {\r\n    cartItems: localStorage.getItem(\"CartItems\") ? JSON.parse(localStorage.getItem(\"CartItems\")) : [],\r\n    cartTotalQuantity: 0,\r\n    CartTotalAmount: 0\r\n};\r\n\r\nconst CartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState,\r\n    reducers: {\r\n        addTocart(state, action) {\r\n\r\n            const itemIndex = state.cartItems.findIndex(item => item._id === action.payload._id);\r\n            if (itemIndex >= 0) {\r\n                state.cartItems[itemIndex].cartQuantity += 1;\r\n                toast.info(\"Incrsed\", {\r\n                    position: \"bottom-left\"\r\n                });\r\n            } else {\r\n                const tempProduct = { ...action.payload, cartQuantity: 1 };\r\n                state.cartItems.push(tempProduct);\r\n                toast.success(`${action.payload.name} Added To Cart`, {\r\n                    position: \"bottom-left\",\r\n                });\r\n            }\r\n\r\n            localStorage.setItem(\"CartItems\", JSON.stringify(state.cartItems))\r\n\r\n        },\r\n        removeFromCart(state, action) {\r\n            const nextCartItems = state.cartItems.filter(\r\n                cartItem => cartItem._id !== action.payload._id\r\n            )\r\n            state.cartItems = nextCartItems;\r\n            localStorage.setItem(\"CartItems\",JSON.stringify(state.cartItems))\r\n            toast.error(`${action.payload.name} Remove From Cart`, {\r\n                position: \"bottom-left\",\r\n            });\r\n\r\n        },\r\n        DecreseCart(state,action){\r\n            const itemIndex =state.cartItems.findIndex(\r\n                cartItem => cartItem._id === action.payload._id\r\n            )\r\n            if(state.cartItems[itemIndex].cartQuantity>1){\r\n                state.cartItems[itemIndex].cartQuantity-=1\r\n            }else if(state.cartItems[itemIndex].cartQuantity === 1){\r\n                const nextCartItems = state.cartItems.filter(\r\n                    cartItem => cartItem._id !== action.payload._id\r\n                )\r\n                state.cartItems = nextCartItems;\r\n               \r\n            }\r\n            localStorage.setItem(\"CartItems\",JSON.stringify(state.cartItems))\r\n        },\r\n        Increse(state, action) {\r\n\r\n            const itemIndex = state.cartItems.findIndex(item => item._id === action.payload._id);\r\n            if (itemIndex >= 0) {\r\n                state.cartItems[itemIndex].cartQuantity += 1;\r\n                \r\n            } else {\r\n                const tempProduct = { ...action.payload, cartQuantity: 1 };\r\n                state.cartItems.push(tempProduct);\r\n               \r\n            }\r\n\r\n            localStorage.setItem(\"CartItems\", JSON.stringify(state.cartItems))\r\n\r\n        },\r\n        ClearCart(state,action){\r\n            state.cartItems = [];\r\n            toast.error('Cart Cleared', {\r\n                position: \"bottom-left\",\r\n            });\r\n            localStorage.setItem(\"CartItems\", JSON.stringify(state.cartItems))\r\n        },\r\n        GetTotal(state,action){\r\n            state.cartItems.reduce((cartTotal,cartItem)=>{\r\n                const {price,cartQuantity} = cartItem;\r\n                const itemTotal = price * cartQuantity;\r\n\r\n                cartTotal.total += itemTotal\r\n            },{\r\n                total:0,\r\n                quantity:0\r\n            })\r\n        }\r\n    },\r\n});\r\n\r\nexport const { addTocart,removeFromCart,DecreseCart,Increse ,ClearCart} = CartSlice.actions;\r\nexport default CartSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}